(define (sum term a next  b )
  (if (> a b)
      0
      (+ (term a)
         (sum term (next a) next b))))
(define (inc n) (+ n 1))
(define cube (lambda (x) (* x x x)))
(define (integral f a b n)
  (define (h) (/ (- b a) n))
  (define (integral-term-idx i)
    (cond ((or (= i 0) (= i n)) 1)
          ((even? i) 2)
          (else 4)))       
  (define (integral-term i) (* (integral-term-idx i)
                               (f (+ (* i (h)) a))))
  (* (sum integral-term 0 inc n) (/ (h) 3)))